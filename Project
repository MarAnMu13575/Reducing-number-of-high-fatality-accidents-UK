# Libraries used for the creation of this analysis. Run this to proced
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score

# Introduction
In 2020, 1516 people were killed on UK roads, with 1460 deaths recorded in Britain and 56 recorded in Norther Ireland. 
This was significant decline compared with the previous year is due in part to the lockdown measures that were imposed in response to the COVID-19 pandemic. 
The number of road deaths in the UK plateaued from 2012 to 2019 at around 1850 deaths a year, or equivalent of five a day, on average. 
The trend relating to serious injuries is more difficult to analyze, as the method the police use to record severity has changed in recent years. 
However, this number has declined slightly since 2010, the total figure is still more than 22,000 serious injuries a year, or the equivalent of around 60 a day (Brake, 2021)
The reporting department have been collecting data on every accident that is reported in 2020, looking for insights to reduce the number of major incidents. 
The safety team classes major incidents as fatal accidents involving 3+ casualties.
The data used in this report was published by the department for transport. 
Contains public sector information licensed under the Open Government License v3.0. Link: https://data.gov.uk/dataset/road-accidents-safety-data

#Database description
accidents = pd.read_csv(r'./data/accident-data.csv')
accidents.head()

For doubts about the meaning of any code/format number please use the next code to see their labels
accidents.columns

lookup = pd.read_csv(r'./data/road-safety-lookups.csv')
#Change the 'day_of_week'for any other on the database to see the code/format and their labels
lookup[lookup['field name'] == 'weather_conditions']

# Time of day and day of the week do major accidents happen
As we said the major incidents are the one with 3+ number of casualities. 
Using an descriptive analysis the day of the week where most of the major incidents happens was Saturday with 821 reports, and in second place Friday with 798. 
For reference look in Figure 1 and 2. The time of the day where most of the major incidents happens were 15:30 pm and 16:00 pm with 35 reports both.

noc = accidents[(accidents.number_of_casualties >= 3)]
noc['day_of_week'].replace({1:'Sunday',2:'Monday',3:'Tuesady',4:'Wendesday',5:'Thursday',6:'Friday',7:'Saturday'}, inplace= True)
sns.catplot(y='day_of_week',data=noc,kind='count', order=noc.day_of_week.value_counts().index,aspect=4)
sns.catplot(y='time', data = noc, order=noc.time.value_counts().iloc[:11].index,kind='count')

Referent to the day of the week where most incidents happen, more reports appear as the weekend approaches, and according to the time, 
most of the hours go from the mid- afternoon range of 14:00 pm to 16:30 pm.

# Patterns in the time of day/ day of the week when major incidents occur
Using the time of the day and day of the week where most major incidents happen, four graphs were created to search for patterns.

dows = noc[(noc.day_of_week == 'Saturday')| (noc.time == '15:30')| (noc.time == '16:00') ]

In Figure 3 was compared first road number, first road class and road type. 
The first step was searching for the top five first road number with most reports finding the numbers of 0 with 281 reports, 
6 with 12 reports, 1 with 12 reports, 25 with 11 and 34 with 8. Next, we look up the road type and find that most of the reports are for 
the road type 6 with more than 628, 3 with 181, 1 with 41, 7 with 20 and 9 with 7. 
Finally, in the first road class the value with most of the reports goes for 3 with 426 reports, 6 with 240 reports, 4 with 111, 1 with 60 and 5 with 41.

sns.catplot(y="first_road_number",data=dows,order=dows.first_road_number.value_counts().iloc[:6].index,hue= 'first_road_class', col='road_type',kind='count',height=2)

As we merge the values in the Figure 3, we perceive that the first road number 0 with road type 6 and firs road class 5 and 6 is the only 
graph with most of the reports, making a possible point.

In the next Figure where was compared the first road number, speed limit, light conditions, and weather conditions. 
We can see that most of the reports goes for the graph where the light conditions are 1, second 4 and third 6, with weather condition between 1 and 3 and occasionally 4 to 9. 
As we can observe in the speed limit almost every graph is between 30 and 60.

sns.relplot(x ='speed_limit', y=  'first_road_number', hue= 'weather_conditions', col = 'light_conditions', data= dows, kind= 'scatter',height=2 )

For the next graph is compared the junction detail and junction control, finding that all the junction control type 1 lies with the junction detail 0, 
while the other junction detail has junction control type 2 and 4, being the junction detail 3 the one with the most elevated junction control 4.

sns.catplot(x= 'junction_detail',data=dows,kind='count',aspect= 3,hue='junction_control')

In the Figure 6 was compared the road surface conditions and urban or rural area, perceiving that the urban or rural area 1 has more reports road surface conditions 1 
than the urban or rural area 2. While the road surface conditions 2 are similar for both graphs.

sns.catplot(x = 'urban_or_rural_area',data=dows, kind='count',hue='road_surface_conditions',height=3)

# Stand out characteristic in major incidents compared with other accidents
Looking for a standout characteristic in major incidents compared with other accidents, it was compared the >=3 casualities and <=2 casualities, 
and found out that there are more reports for <=2 number of casualties.

dows1 = accidents[(accidents.number_of_casualties >= 3)]
dows2 = accidents[(accidents.number_of_casualties <= 2)]
dows1.shape,dows2.shape

Even if the reports are more the distribution between fist road number, road type and first road class look be the same, 
the road type 6 and first road class 1 distribution is standing out. 
Another difference between this graph is that the top five first road number changed with less casualties, changing 25,5 and 38 for 4,23 and 3 respectively. 
Being 0,1 and 6 the same for bout types of casualities

sns.catplot(y="first_road_number",data=dows1,order=dows1.first_road_number.value_counts().iloc[:6].index,hue= 'first_road_class', col='road_type',kind='count',height=2)
sns.catplot(y="first_road_number",data=dows2,order=dows2.first_road_number.value_counts().iloc[:6].index,hue= 'first_road_class', col='road_type',kind='count',height=2)
 
sns.catplot(x= 'junction_detail',data=dows1,kind='count',aspect= 4,hue='junction_control')
sns.catplot(x= 'junction_detail',data=dows2,kind='count',aspect= 4,hue='junction_control')

sns.relplot(x ='speed_limit', y=  'first_road_number', hue= 'weather_conditions', col = 'light_conditions', data= dows1, kind= 'scatter',height=2 )
sns.relplot(x ='speed_limit', y=  'first_road_number', hue= 'weather_conditions', col = 'light_conditions', data= dows2, kind= 'scatter',height=2 )

sns.catplot(x = 'urban_or_rural_area',data=dows1, kind='count',hue='road_surface_conditions',height=3)
sns.catplot(x = 'urban_or_rural_area',data=dows2, kind='count',hue='road_surface_conditions',height=3)

# Recommendations to focus the brainstroming to reduce major incidents
To focus the brainstorming efforts to reduce major incidents a decision tree was created using the values x and y, being y the dependent variable (number of casualties). 
For the decision tree the min samples leaf used was 5, the criterion was Gini, and a random state was 111. Using an accuracy of 70 to accept or decline 
the weight of the analysis.

x = accidents[['accident_severity','number_of_vehicles', 'day_of_week','first_road_class','first_road_number', 'road_type', 'speed_limit','junction_detail', 'junction_control','pedestrian_crossing_human_control','pedestrian_crossing_physical_facilities', 'light_conditions','weather_conditions', 'road_surface_conditions','special_conditions_at_site', 'carriageway_hazards','urban_or_rural_area']]
y = accidents[[ 'number_of_casualties']]

#Train/ test selection
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=111)
#Algorithm
dt = DecisionTreeClassifier(min_samples_leaf = 5, criterion ='gini')
#Fit
dt.fit(x_train, y_train)
#Importnaces
importancias = dt.feature_importances_
importancias_df = pd.DataFrame({'feature':x.columns,'importancia':importancias})
importancias_df.sort_values(by='importancia',ascending=False,inplace=True)
#Prediction
predicciones = dt.predict(x_test)

exact = accuracy_score(y_test,predicciones)
pres = precision_score(y_test, predicciones,average='macro')
sens = recall_score(y_test, predicciones,average='macro')
f1 = f1_score(y_test,predicciones,average='macro')
print([exact,pres,sens,f1])

Looking for the weight of each independent variable the top five are:

First road number
Day of the week
Number of vehicles
Speed limit
Junction detail
With a accuracy of 77.5438 % we can accept the weight of the analysis.

# Recomendations:
The next points are recommendations for the department of transport for major inccidents (+3 casualities):

Day of the week where most of the accidents happen: Saturday
Time of day where most of the accidents happen: 15:30 and 16:00
First road number: 0 (type C or unclassified), 6 and 1
First road class: 5 (type C) and 6 (Unclassified)
First road type: 6 (Single carriageways)
Lights conditions: 1 (Daylight), 4 (Darnkness- light lit) and 6 (Darkness â€“ no lighting)
Speed limit: 30 to 60 mph
Weather conditions: 1 (Fine no high winds) and 3 (Snowing no high winds)
Junction detail: 0 (Not at junction or within 20 metres), 3 (T or staggered junction)
Junction control: -1 (Data missing or out of range), 4 (Give way or uncontrolled), 2 (Auto traffic signal)
Urban or rural area: 1 (urban), 2 (rural)
Road surface conditions: 1 (dry), 2 (wet or damp)

# Conclusions
It is concluded with the analysis carried out that most of the accidents occur within the weekend and at noon. 
In addition to these they happen in places where there is no junction detail or they are T or staggered junction, 
and the junction control have data missing or out or range. It was even believed that light could have a strong relationship with this, 
but most accidents occur in daylight. Although within this, the climate seems to have a relationship with the snow without high winds, 
but also in situations without any problem. Even after this the first road, looks like a major point to focus the efforts as we see in the 
descriptive analysis and decision tree. And after all, we belive that this insights can help to reduce the major incidents to rescue lifes.
